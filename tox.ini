[tox]
envlist = python
minversion = 3.13.0
requires =
    setuptools >= 40.9.0
    pip >= 19.0.3
    # tox-venv >= 0.4.0
isolated_build = true


[testenv]
isolated_build = true
usedevelop = false
deps =
    pytest
commands =
    {envpython} -m pytest {posargs:}


[testenv:build-dists]
isolated_build = true
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install octomachinery itself in this env
skip_install = true
deps =
    pep517 >= 0.6.0
    twine
setenv =
    PYPI_UPLOAD = true
commands =
    rm -rfv {toxinidir}/dist/
    {envpython} -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    ls -alh {toxinidir}/dist/
    twine check {toxinidir}/dist/*
whitelist_externals =
    ls
    rm


[testenv:build-dists-manylinux]
basepython = python3
description =
    Build manylinux wheels in a container and put them into the dists/ folder
commands =
    {env:DOCKER_EXECUTABLE:docker} run -it --rm -v {toxinidir}:/io {posargs:} pyca/cryptography-manylinux1:x86_64 /io/build-scripts/build-manylinux-wheels.sh 0.9.3
deps =
isolated_build = true
passenv =
    # alternatively set `DOCKER_EXECUTABLE=podman` outside the container
    DOCKER_EXECUTABLE
    HOME
skip_install = true
whitelist_externals =
    {env:DOCKER_EXECUTABLE:docker}


[testenv:lint]
basepython = python3
commands =
    {envpython} -m pre_commit run --show-diff-on-failure {posargs:--all-files}

    # Print out the advise of how to install pre-commit from this env into Git:
    -{envpython} -c \
    'cmd = "{envpython} -m pre_commit install"; scr_width = len(cmd) + 10; sep = "=" * scr_width; cmd_str = "    $ " + cmd; '\
    'print("\n" + sep + "\nTo install pre-commit hooks into the Git repo, run:\n\n" + cmd_str + "\n\n" + sep + "\n")'
deps =
    pre-commit
    # pylint
isolated_build = true
skip_install = true
