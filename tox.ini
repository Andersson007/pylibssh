[tox]
envlist = python
minversion = 3.13.0
requires =
    setuptools >= 40.9.0
    pip >= 19.0.3
    # tox-venv >= 0.4.0
isolated_build = true


[testenv]
isolated_build = true
usedevelop = false
deps =
    pytest
commands =
    {envpython} -m pytest {posargs:}


[testenv:build-dists]
isolated_build = true
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install octomachinery itself in this env
skip_install = true
deps =
    Cython
    pep517 >= 0.5.0
passenv =
    CFLAGS
    LDFLAGS
    NPROC
    PKG_CONFIG_PATH
setenv =
    PYPI_UPLOAD = true
commands =
    rm -rfv {toxinidir}/dist/
    # cythonize
    # `--build` instead of `--inplace` creates `pylibsshext/` dir
    # with `*.so` files in it instead of moving them next
    # to `*.pyx` sources
    {envpython} -c 'from Cython.Build.Cythonize import main; main()' \
      --3str \
      --inplace \
      -j {env:NPROC:12} \
      src/**/*.pyx
    # Getting the following error
    # python: No code object available for setup
    # is caused by importing a cext via `python -m`
    {envpython} -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
whitelist_externals =
    rm


[testenv:lint]
basepython = python3
commands =
    {envpython} -m pre_commit run --show-diff-on-failure {posargs:--all-files}

    # Print out the advise of how to install pre-commit from this env into Git:
    -{envpython} -c \
    'cmd = "{envpython} -m pre_commit install"; scr_width = len(cmd) + 10; sep = "=" * scr_width; cmd_str = "    $ " + cmd; '\
    'print("\n" + sep + "\nTo install pre-commit hooks into the Git repo, run:\n\n" + cmd_str + "\n\n" + sep + "\n")'
deps =
    pre-commit
    # pylint
isolated_build = true
skip_install = true
